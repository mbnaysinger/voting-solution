services:
  mongodb:
    image: mongo:latest
    container_name: voting-solution-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: voting123
      MONGO_INITDB_DATABASE: voting-solution
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./init-mongo/create-collection.js:/docker-entrypoint-initdb.d/create-collection.js:ro
    networks:
      - voting-network

  # Interface web para gerenciar MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: voting-solution-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: voting123
      ME_CONFIG_MONGODB_URL: mongodb://admin:voting123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - voting-network

  # Serviço k6 para testes de carga (execução manual via docker compose run)
  k6:
    image: grafana/k6:latest
    container_name: voting-solution-k6
    volumes:
      - ./:/scripts
      - ./load-test:/load-test
    environment:
      - BASE_URL=http://host.docker.internal:8080/api/v1/agenda
      - RATE=0.5
      - DURATION=2m
    networks:
      - voting-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  voting-network:
    driver: bridge